spring:
  application:
    name: qbychat
  docker:
    compose:
      enabled: true
      file: compose.yml
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://root:password@localhost/qbychat?authSource=admin}
    redis:
      url: ${REDIS_URL:redis://127.0.0.1:6379/0}
  security:
    jwt:
      key: ${JWT_KEY:3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b}
      expire: ${JWT_EXPIRE:3}
  cloud:
    stream:
      bindings:
        qbychatWebsocketPayloadConsumer-in-0:
          destination: qbychat-1
      kafka:
        bindings:
          supplier-out-0:
            producer:
              configuration:
                schema.registry.url: http://localhost:8081
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
        binder:
          brokers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}

instance:
  id: ${HOSTNAME:qbychat}

qbychat:
  federation:
    enabled: true
    domain: localhost
    allowInsecure: false
  websocket:
    path: /ws
    requireEncryption: true
