spring:
  application:
    name: qbychat-test

  data:
    mongodb:
      uri: mongodb://localhost:27017/qbychat-test?authSource=admin
    redis:
      host: disabled
      port: 0

  security:
    jwt:
      key: test-key-3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
      expire: 1

  cloud:
    stream:
      bindings:
        qbychatWebsocketPayloadConsumer-in-0:
          destination: qbychat-test-topic
      kafka:
        bindings:
          supplier-out-0:
            producer:
              configuration:
                schema.registry.url: http://localhost:8081
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
        binder:
          brokers: localhost:9092

instance:
  id: qbychat-test-instance

qbychat:
  federation:
    enabled: false
    domain: test.localhost
    allowInsecure: true
  websocket:
    path: /ws
    requireEncryption: false

logging:
  level:
    org.springframework.kafka: DEBUG
    org.springframework.data.mongodb: DEBUG
    org.testcontainers: INFO
    com.github.dockerjava: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

test:
  mongodb:
    database: qbychat-test
    username: test
    password: test
  redis:
    database: 1
  kafka:
    consumer-group: qbychat-test-group